(function(){var t={8108:function(){},7848:function(t,e,i){"use strict";var n=i(3751),o=i(641);function s(t,e,i,n,s,a){const l=(0,o.g2)("GameComponent"),r=(0,o.g2)("SimulationComponent");return(0,o.uX)(),(0,o.CE)(o.FK,null,[(0,o.Lk)("div",null,[(0,o.bF)(l)]),(0,o.Lk)("div",null,[(0,o.bF)(r,{msg:"Welcome to Your Vue.js App"})])],64)}var a=i(33);const l=(0,o.Lk)("h1",null,"Evolution Experiment Simulation",-1),r={class:"settings-container"},u={class:"settings-block"},h=(0,o.Lk)("h2",null,"Culture Control Parameters",-1),c={class:"settings-table"},d=["onUpdate:modelValue"],p={class:"settings-block"},m=(0,o.Lk)("h2",null,"Culture Growth Model Parameters",-1),g={class:"settings-table"},f=["onUpdate:modelValue"],v={class:"outcome"},b=(0,o.Lk)("h2",null,"Outcome",-1),y=(0,o.Lk)("text",null,"Duration [h]: ",-1),x=(0,o.Lk)("br",null,null,-1),k=(0,o.Lk)("div",{id:"plotDiv"},null,-1),C=(0,o.Lk)("div",{id:"adaptation-rate-plot"},null,-1),w=(0,o.Lk)("div",{id:"mu-plot"},null,-1);function D(t,e,i,s,D,M){return(0,o.uX)(),(0,o.CE)(o.FK,null,[l,(0,o.Lk)("div",r,[(0,o.Lk)("div",u,[h,(0,o.Lk)("table",c,[((0,o.uX)(!0),(0,o.CE)(o.FK,null,(0,o.pI)(D.updaterSettings,((t,e)=>((0,o.uX)(),(0,o.CE)("tr",{key:"updater-"+e},[(0,o.Lk)("td",null,(0,a.v_)(e),1),(0,o.Lk)("td",null,[(0,o.bo)((0,o.Lk)("input",{"onUpdate:modelValue":t=>D.updaterSettings[e]=t,type:"number"},null,8,d),[[n.Jo,D.updaterSettings[e]]])])])))),128))])]),(0,o.Lk)("div",p,[m,(0,o.Lk)("table",g,[((0,o.uX)(!0),(0,o.CE)(o.FK,null,(0,o.pI)(D.modelSettingsKeys,(t=>((0,o.uX)(),(0,o.CE)("tr",{key:"model-"+t},[(0,o.Lk)("td",null,(0,a.v_)(t),1),(0,o.Lk)("td",null,[(0,o.bo)((0,o.Lk)("input",{"onUpdate:modelValue":e=>D.modelSettings[t]=e,type:"number"},null,8,f),[[n.Jo,D.modelSettings[t]]])])])))),128))])]),(0,o.Lk)("div",v,[b,(0,o.Lk)("p",null,"Volume Used: "+(0,a.v_)(D.volumeUsed)+" ml",1),(0,o.Lk)("p",null,[(0,o.eW)("IC50 Fold Change: "),(0,o.Lk)("b",null,(0,a.v_)(D.ic50FoldChange),1)]),(0,o.Lk)("p",null,[(0,o.eW)("Volume per IC50 Doubling: "),(0,o.Lk)("b",null,(0,a.v_)(D.volumePerIC50Doubling),1),(0,o.eW)(" ml")]),(0,o.Lk)("p",null,[(0,o.eW)("Time per IC50 Doubling: "),(0,o.Lk)("b",null,(0,a.v_)(D.timePerIC50Doubling),1),(0,o.eW)(" hours")]),y,(0,o.bo)((0,o.Lk)("input",{"onUpdate:modelValue":e[0]||(e[0]=t=>D.simulationHours=t),type:"number"},null,512),[[n.Jo,D.simulationHours]]),x,(0,o.Lk)("button",{class:"run-button",onClick:e[1]||(e[1]=(...t)=>M.runSimulation&&M.runSimulation(...t))},"Recalculate")])]),k,C,w],64)}i(4114);function M(t,e,i,n,o){const s=o*n,a=Math.log(9)/(o-s);return e+i/(1+Math.exp(-a*(o-t)))}function I(t,e,i,n){const o=Math.log(19)/(.5*n),s=i-e,a=t/(1+Math.exp(-o*s));return a}function R(t,e,i,n,o,s,a){const l=M(t,0,i,n,o);return e+l*(1-s/a)}function S(t,e,i,n,o){const s=i*n,a=-Math.log(o)/Math.pow(s-i,2),l=e*Math.exp(-a*Math.pow(t-i,2));return l}class L{constructor(t={}){const e={odDilutionThreshold:.3,dilutionFactor:1.6,dilutionNumberInitialDose:1,doseInitialAdded:10,doseIncreaseFactor:2,thresholdGrowthRateIncreaseStress:.15,thresholdGrowthRateDecreaseStress:-.1,delayDilutionMaxHours:3,delayStressIncreaseMinGenerations:3,volumeVial:12,pump1StockDrugConcentration:0,pump2StockDrugConcentration:300};Object.assign(this,e,t)}rescueConditionIsMet(t){if(t.doses.length<1)return!1;const e=t.doses[t.doses.length-1][1],i=(t.timeCurrent-e)/36e5;return!(i<this.delayDilutionMaxHours)&&(!(t.growthRate>this.thresholdGrowthRateDecreaseStress)&&(console.log(t.growthRate,this.thresholdGrowthRateDecreaseStress,"Rescue condition met"),!0))}diluteToWashIfNeeded(t){if(!t.population||0===t.population.length)return;let e=.02*this.pump2StockDrugConcentration,i=t.population[0][1];t.doses.length>0&&(i=t.doses[t.doses.length-1][1],e=Math.max(e,t.doses[t.doses.length-1][0]));const n=(t.timeCurrent.getTime()-i.getTime())/36e5;n>this.delayDilutionMaxHours&&(console.log("Washing dilution",e,"time",t.timeCurrent),t.diluteCulture(e,1.2))}update(t){if(0!==t.population.length){if(t.population[t.population.length-1][0]>=this.odDilutionThreshold){let e=0;if(t.doses.length===this.dilutionNumberInitialDose)e=this.doseInitialAdded;else if(t.doses.length>this.dilutionNumberInitialDose){e=t.doses[t.doses.length-1][0];const i=t.doses.reduceRight(((t,e,i,n)=>null!==t?t:i>0&&e[0]!==n[i-1][0]?e[1]:null),null);console.log("Last dose change time",i);const n=t.generations.find((t=>t[1]>=i))[0],o=t.generations[t.generations.length-1][0]-n,s=Math.log(this.dilutionFactor)/Math.log(2);t.growthRate>this.thresholdGrowthRateIncreaseStress&&o+s>this.delayStressIncreaseMinGenerations&&(e*=this.doseIncreaseFactor,console.log("Stress increase from",t.doses[t.doses.length-1][0],"to",e,"due to growth rate increase"),e=Math.round(1e3*e)/1e3)}console.log("Dilution to target dose",e,"time",t.timeCurrent),t.diluteCulture(e)}else this.rescueConditionIsMet(t)&&(console.log("Rescue dilution"),t.diluteCulture(0));this.diluteToWashIfNeeded(t)}}}var E=L,F=i(4708),G=i.n(F);class T{constructor(t={}){this.defaults={initialPopulation:.01,doublingTimeMins:20,carryingCapacity:.9,muMin:-.1,ic50Initial:5,ic10Ic50Ratio:.5,doseEffectiveSlopeWidthMins:120,timeLagDrugEffectMins:30,adaptationRateMax:.08,adaptationRateIc10Ic50Ratio:.8,generationCurrent:0,drugConcentration:0,effectiveDose:0,timeCurrent:new Date,updater:new E},Object.assign(this,this.defaults,t),this.muMax=Math.log(2)/(this.doublingTimeMins/60),this.initializeModelState()}initializeModelState(){this.timeCurrent=new Date,this.population=[],this.generations=[],this.doses=[],this.effectiveDoses=[],this.ic50s=[[this.ic50Initial,this.timeCurrent]],this.effectiveGrowthRates=[],this.adaptationRates=[]}get growthRate(){return this.effectiveGrowthRates.length?this.effectiveGrowthRates[this.effectiveGrowthRates.length-1][0]:0}calculateEffectiveDose(t){if(0===this.effectiveDoses.length){let t=this.doses.length>0?this.doses[0][0]:0;this.effectiveDoses.push([t,this.timeCurrent])}let e=this.effectiveDoses[0][0];const i=0;if(this.doses.length>1){const n=[i].concat(this.doses.map((t=>t[0]))),o=this.doses.map((t=>t[1]));for(let i=1;i<n.length;i++){let s=n[i]-n[i-1];if(0===s)continue;let a=(t-o[i-1])/36e5;e+=I(s,this.timeLagDrugEffectMins/60,a,this.doseEffectiveSlopeWidthMins/60)}}return e}simulateExperimentMinute(){let t=this.calculateEffectiveDose(this.timeCurrent);this.effectiveDoses.push([t,this.timeCurrent]);let e=0;if(this.population.length&&(e=R(t,this.muMin,this.muMax,this.ic10Ic50Ratio,this.ic50s[this.ic50s.length-1][0],this.population[this.population.length-1][0],this.carryingCapacity),this.effectiveGrowthRates.push([e,this.timeCurrent])),t>0){let e=S(t,this.adaptationRateMax,this.ic50s[this.ic50s.length-1][0],this.ic10Ic50Ratio,this.adaptationRateIc10Ic50Ratio);this.adaptationRates.push([e,this.timeCurrent]);let i=this.ic50s[this.ic50s.length-1][0]*Math.exp(e/60);this.ic50s.push([i,this.timeCurrent])}let i=this.population.length?this.population[this.population.length-1][0]*Math.exp(e/60):this.initialPopulation;this.population.push([i,this.timeCurrent]),this.updater.update(this)}diluteCulture(t=0,e=1.6){e=this.updater.dilutionFactor;const i=this.updater.volumeVial*(e-1),n=this.updater.pump2StockDrugConcentration,o=this.updater.pump1StockDrugConcentration,s=this.drugConcentration,a=this.updater.volumeVial,l=(s*a+n*i)/(a+i),r=(s*a+o*i)/(a+i);t=Math.min(t,l),t=Math.max(t,r);const u=t-s;if(this.drugConcentration+=u,this.doses.push([this.drugConcentration,this.timeCurrent]),this.population.length>0){const t=this.population[this.population.length-1][0]/e;this.population[this.population.length-1]=[t,this.timeCurrent]}let h=Math.log2(e);this.generations.length>0&&(h+=this.generations[this.generations.length-1][0]),this.generations.push([h,this.timeCurrent])}simulateExperiment(t=48){for(let e=1;e<=60*t;e++)this.timeCurrent=new Date(this.timeCurrent.getTime()+6e4),this.simulateExperimentMinute()}plotSimulation(t){this.simulateExperiment(t),this.getSimulationEfficiency();const e=this.population.map((t=>t[1])),i=this.population.map((t=>t[0])),n=this.effectiveGrowthRates.map((t=>({x:t[1],y:t[0]}))),o=this.ic50s.map((t=>({x:t[1],y:t[0]}))),s=this.doses.map((t=>({x:t[1],y:t[0]}))),a=this.adaptationRates.map((t=>({x:t[1],y:t[0]}))),l=this.generations.map((t=>({x:t[1],y:t[0]}))),r={x:e,y:i,mode:"markers",name:"Bacteria Population",marker:{color:"black",dash:"dot",width:1}},u={x:n.map((t=>t.x)),y:n.map((t=>t.y)),mode:"lines+markers",name:"Effective Growth Rate",yaxis:"y2",line:{color:"blue"}},h={x:o.map((t=>t.x)),y:o.map((t=>t.y)),mode:"lines",name:"IC50",yaxis:"y4",line:{color:"green",width:1,dash:"dot"}},c={x:s.map((t=>t.x)),y:s.map((t=>t.y)),mode:"lines+markers",name:"Dose",yaxis:"y4",line:{color:"green",shape:"hv",width:2}},d={x:this.effectiveDoses.map((t=>t[1])),y:this.effectiveDoses.map((t=>t[0])),mode:"lines",name:"Effective Dose",yaxis:"y4",line:{color:"green",width:1}},p={x:a.map((t=>t.x)),y:a.map((t=>t.y)),mode:"lines",name:"Adaptation Rate",yaxis:"y5",line:{color:"violet"}},m={x:l.map((t=>t.x)),y:l.map((t=>t.y)),mode:"lines+markers",name:"Generations",yaxis:"y6",line:{color:"red"}},g={title:"",xaxis:{title:"Time"},yaxis:{title:"Optical Density"},yaxis2:{title:"Effective Growth Rate",overlaying:"y",side:"right"},yaxis4:{title:"Dose",overlaying:"y",side:"right",position:.9},yaxis5:{title:"Adaptation Rate",overlaying:"y",side:"right",position:.85},yaxis6:{title:"Generations",overlaying:"y",side:"right",position:.8}},f=[r,u,h,c,d,p,m];G().newPlot("plotDiv",f,g)}getSimulationEfficiency(){const t=this.updater.dilutionFactor,e=this.updater.volumeVial*(t-1),i=this.doses.length*e,n=this.ic50s[this.ic50s.length-1][0]/this.ic50s[0][0],o=(this.population[this.population.length-1][1]-this.population[0][1])/36e5;return[i,o,n]}}var P=T;class A{constructor(t=null){this.model=t}plot_mu(){const t=Array.from({length:1e3},((t,e)=>.1*e)),e=this.model.muMin,i=this.model.muMax,n=this.model.ic50Initial,o=this.model.ic10Ic50Ratio,s=t.map((t=>R(t,e,i,o,n,.5,1))),a=[{x:t,y:s,type:"scatter",mode:"lines",line:{color:"blue"}}],l={title:"Effect of Drug Dose on Growth Rate",xaxis:{title:"Effective Drug Dose"},yaxis:{title:"Growth Rate [1/hour]"}};G().newPlot("mu-plot",a,l)}plot_adaptation_rate(){const t=Array.from({length:1e3},((t,e)=>.1*e)),e=this.model.adaptationRateMax,i=this.model.ic50Initial,n=this.model.ic10Ic50Ratio,o=this.model.adaptationRateIc10Ic50Ratio,s=t.map((t=>S(t,e,i,n,o))),a=[{x:t,y:s,type:"scatter",mode:"lines",line:{color:"black"}}],l={title:"Effect of Antibiotic Dose on Adaptation Rate",xaxis:{title:"Effective Antibiotic Dose"},yaxis:{title:"Adaptation Rate [1/hour]"}};G().newPlot("adaptation-rate-plot",a,l)}}var O={name:"SimulationComponent",data(){return{updaterSettings:{odDilutionThreshold:.3,dilutionFactor:1.6,dilutionNumberInitialDose:1,doseInitialAdded:10,doseIncreaseFactor:2,thresholdGrowthRateIncreaseStress:.15,thresholdGrowthRateDecreaseStress:-.1,delayDilutionMaxHours:3,delayStressIncreaseMinGenerations:3,volumeVial:12,pump1StockDrugConcentration:0,pump2StockDrugConcentration:300},modelSettings:{initialPopulation:.01,doublingTimeMins:20,carryingCapacity:2,muMin:-.1,ic50Initial:5,ic10Ic50Ratio:.5,doseEffectiveSlopeWidthMins:120,timeLagDrugEffectMins:30,adaptationRateMax:.08,adaptationRateIc10Ic50Ratio:.8,generationCurrent:0,drugConcentration:0,effectiveDose:0,timeCurrent:new Date},settingsTsv:"",volumeUsed:0,totalTime:0,ic50FoldChange:0,volumePerIC50Doubling:0,timePerIC50Doubling:0,simulationHours:48,modelSettingsKeys:["initialPopulation","doublingTimeMins","carryingCapacity","muMin","ic50Initial","ic10Ic50Ratio","doseEffectiveSlopeWidthMins","timeLagDrugEffectMins","adaptationRateMax","adaptationRateIc10Ic50Ratio"]}},watch:{updaterSettings:{handler:"runSimulation",deep:!0},modelSettings:{handler:"runSimulation",deep:!0}},mounted(){this.runSimulation()},methods:{runSimulation(){const t=new E(this.updaterSettings),e=new P({...this.modelSettings,updater:t});e.plotSimulation(this.simulationHours);let[i,n,o]=e.getSimulationEfficiency();const s=i/Math.log2(o),a=n/Math.log2(o);this.volumeUsed=i.toFixed(1),this.totalTime=n.toFixed(1),this.ic50FoldChange=o.toFixed(2),this.volumePerIC50Doubling=s.toFixed(1),this.timePerIC50Doubling=a.toFixed(1);const l=new A(e);l.plot_mu(),l.plot_adaptation_rate(),this.generateTsv()},generateTsv(){const t={...this.updaterSettings,...this.modelSettings};this.settingsTsv=Object.entries(t).map((([t,e])=>`${t}\t${e}`)).join("\n")}}},_=i(6262);const V=(0,_.A)(O,[["render",D]]);var W=V;const j={width:"200",height:"200",xmlns:"http://www.w3.org/2000/svg"},U=(0,o.Fv)('<ellipse cx="100" cy="100" rx="40" ry="20" fill="green" stroke="black" stroke-width="2" data-v-5b3f7eb0></ellipse><circle cx="90" cy="95" r="5" fill="white" data-v-5b3f7eb0></circle><circle cx="110" cy="95" r="5" fill="white" data-v-5b3f7eb0></circle><circle cx="90" cy="95" r="2" fill="black" data-v-5b3f7eb0></circle><circle cx="110" cy="95" r="2" fill="black" data-v-5b3f7eb0></circle><path d="M85 110 Q100 120 115 110" stroke="black" stroke-width="2" fill="none" data-v-5b3f7eb0></path><path id="left-arm" d="M60,100 Q45,85 30,70" stroke="black" stroke-width="4" fill="none" data-v-5b3f7eb0></path><path id="right-arm" d="M140,100 Q155,85 170,70" stroke="black" stroke-width="4" fill="none" data-v-5b3f7eb0></path><rect id="left-barbell" x="20" y="60" width="20" height="20" fill="gray" stroke="black" stroke-width="2" data-v-5b3f7eb0></rect><rect id="right-barbell" x="160" y="60" width="20" height="20" fill="gray" stroke="black" stroke-width="2" data-v-5b3f7eb0></rect><line id="bar" x1="30" y1="70" x2="170" y2="70" stroke="black" stroke-width="4" data-v-5b3f7eb0></line>',11),H=[U];function X(t,e,i,n,s,a){return(0,o.uX)(),(0,o.CE)("svg",j,H)}var K=i(8108),N=i.n(K);const J=(0,_.A)(N(),[["render",X],["__scopeId","data-v-5b3f7eb0"]]);var Q=J,z={name:"App",components:{SimulationComponent:W,GameComponent:Q}};const $=(0,_.A)(z,[["render",s]]);var B=$;(0,n.Ef)(B).mount("#app")}},e={};function i(n){var o=e[n];if(void 0!==o)return o.exports;var s=e[n]={exports:{}};return t[n].call(s.exports,s,s.exports,i),s.exports}i.m=t,function(){var t=[];i.O=function(e,n,o,s){if(!n){var a=1/0;for(h=0;h<t.length;h++){n=t[h][0],o=t[h][1],s=t[h][2];for(var l=!0,r=0;r<n.length;r++)(!1&s||a>=s)&&Object.keys(i.O).every((function(t){return i.O[t](n[r])}))?n.splice(r--,1):(l=!1,s<a&&(a=s));if(l){t.splice(h--,1);var u=o();void 0!==u&&(e=u)}}return e}s=s||0;for(var h=t.length;h>0&&t[h-1][2]>s;h--)t[h]=t[h-1];t[h]=[n,o,s]}}(),function(){i.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return i.d(e,{a:e}),e}}(),function(){i.d=function(t,e){for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})}}(),function(){i.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}}(),function(){var t={524:0};i.O.j=function(e){return 0===t[e]};var e=function(e,n){var o,s,a=n[0],l=n[1],r=n[2],u=0;if(a.some((function(e){return 0!==t[e]}))){for(o in l)i.o(l,o)&&(i.m[o]=l[o]);if(r)var h=r(i)}for(e&&e(n);u<a.length;u++)s=a[u],i.o(t,s)&&t[s]&&t[s][0](),t[s]=0;return i.O(h)},n=self["webpackChunksimulation"]=self["webpackChunksimulation"]||[];n.forEach(e.bind(null,0)),n.push=e.bind(null,n.push.bind(n))}();var n=i.O(void 0,[504],(function(){return i(7848)}));n=i.O(n)})();
//# sourceMappingURL=app.71dda3c7.js.map